include:
  - template: Auto-DevOps.gitlab-ci.yml

build:
  stage: build
  image: docker:19.03.11
  services:
    - docker:19.03.11-dind
  variables:
    # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

test:
  image: node:alpine
  stage: test
  services:
    - postgres:alpine
    - redis:alpine
  variables:
    POSTGRES_ENABLED: "true"
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: password
    POSTGRES_DB: v2land
    DB_HOST: postgres
    DB_USERNAME: postgres
    DB_PASSWORD: password
    DB_DATABASE: v2land
    DB_SYNC: "true"
    REDIS_HOST: redis
    REDIS_PORT: 6379
  script:
    - yarn --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn test:e2e

doc_pages:
  image: node:alpine
  stage: deploy
  cache:
    paths:
      - node_modules
      - .yarn
  script:
    - yarn --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn run compodoc -p tsconfig.json -d public
  artifacts:
    paths:
      - public
